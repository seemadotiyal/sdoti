{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Simply place the the px-popover next to the element that you want it to attach to.\nSet the `for` attribute to the `id` of the element that it's associated with. Then set\nthe `popover-title` and `popover-body` properties, or pass HTML\ncontent as a child of the px-popover. The popover will automatically grow\nto encapsulate the contents that you have established, but you are responsible for styling\nof the content inside of a rich popover.\n\n### Usage\n\n    <button id=\"someElement\">Some element</button>\n    <px-popover for=\"someElement\"\n                orientation=\"bottom\"\n                popover-title=\"Bottom Popover\"\n                popover-body=\"Lorem ipsum\">\n    </px-popover>\n\nPassing rich HTML content:\n\n    <button id=\"someElement\">Some element</button>\n    <px-popover for=\"someElement\" orientation=\"bottom\">\n      <form><label>This is a form<input class='text-input' type='text' value='Input'/></label></form>\n    </px-popover>\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description\n:----------------|:-------------\n`--px-popover-background-color` | Background color for the popover\n`--px-popover-border-color` | Border color for the popover\n`--px-popover-text-color` | Color for the text\n`--px-popover-max-width` | Maximum width of the popover",
      "summary": "",
      "path": "px-popover.html",
      "properties": [
        {
          "name": "for",
          "type": "string",
          "description": "The id of the element that the tooltip is anchored to. This element\nmust be a sibling of the tooltip.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_forChanged\""
            }
          }
        },
        {
          "name": "orientation",
          "type": "string",
          "description": "The direction that the popover is displayed relative to the\n`for` element.\n- `left` - to the left of the 'for' element\n- `right` - to the right of the 'for' element\n- `top` - above the 'for' element\n- `bottom` - below the 'for' element\n- `auto` - will be placed wherever there is space available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"right\""
        },
        {
          "name": "popoverTitle",
          "type": "string",
          "description": "The title that will be displayed in the popover.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "popoverBody",
          "type": "string",
          "description": "The body text that will be displayed in the popover. Note: Does not support HTML elements within the body. Set `enhanced` and pass HTML as a child of the px-popover instead.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 135,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "position",
          "type": "string",
          "description": "Deprecated: this property is not actually used by the component anymore, but is retained for backward compatibility.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "showOverlay",
          "type": "boolean",
          "description": "By default, the overlay covering the rest of the screen is off.\nThis property should be set for mobile applications.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "enhanced",
          "type": "boolean",
          "description": "Enhanced empowers the developer to fully control the inner HTML of the popover. For instance, the popover can be used to render a form or contain an embedded video.\nTo inject your custom HTML, simply include your custom markup as the first child of the px-popover when declaring the px-popover in your application. Sample provided below.\n\n    <px-popover for=\"someElement\" enhanced>\n        <form>\n           <label>This is a form\n             <input type='text'/>\n           </label>\n        </form>\n    </px-popover>",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 8
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "scrollAction",
          "type": "string",
          "description": "Determines behavior of the popover when scrolling occurs outside:\n- `lock` - scrolling is disabled until popover is dismissed\n- `cancel` - scrolling dismisses the popover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"lock\""
        },
        {
          "name": "_isShowing",
          "type": "boolean",
          "description": "Whether the popover is currently shown.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_target",
          "type": "HTMLElement",
          "description": "Reference to the trigger element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_getTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_forChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "attached",
          "description": "Sets up listeners when popover is created",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parent"
            },
            {
              "name": "child"
            }
          ]
        },
        {
          "name": "_toggle",
          "description": "Determines if event should yield a change in the popover visibility",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "show",
          "description": "Displays the popover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "hide",
          "description": "Hides the popover",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "orientation"
            },
            {
              "name": "target"
            }
          ]
        },
        {
          "name": "_isAuto",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "orientation"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 88,
          "column": 10
        },
        "end": {
          "line": 311,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "for",
          "description": "The id of the element that the tooltip is anchored to. This element\nmust be a sibling of the tooltip.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "orientation",
          "description": "The direction that the popover is displayed relative to the\n`for` element.\n- `left` - to the left of the 'for' element\n- `right` - to the right of the 'for' element\n- `top` - above the 'for' element\n- `bottom` - below the 'for' element\n- `auto` - will be placed wherever there is space available",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "popover-title",
          "description": "The title that will be displayed in the popover.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "popover-body",
          "description": "The body text that will be displayed in the popover. Note: Does not support HTML elements within the body. Set `enhanced` and pass HTML as a child of the px-popover instead.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 135,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "position",
          "description": "Deprecated: this property is not actually used by the component anymore, but is retained for backward compatibility.",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "show-overlay",
          "description": "By default, the overlay covering the rest of the screen is off.\nThis property should be set for mobile applications.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "enhanced",
          "description": "Enhanced empowers the developer to fully control the inner HTML of the popover. For instance, the popover can be used to render a form or contain an embedded video.\nTo inject your custom HTML, simply include your custom markup as the first child of the px-popover when declaring the px-popover in your application. Sample provided below.\n\n    <px-popover for=\"someElement\" enhanced>\n        <form>\n           <label>This is a form\n             <input type='text'/>\n           </label>\n        </form>\n    </px-popover>",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 8
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "scroll-action",
          "description": "Determines behavior of the popover when scrolling occurs outside:\n- `lock` - scrolling is disabled until popover is dismissed\n- `cancel` - scrolling dismisses the popover",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "px-popover-hide",
          "description": "px-popover-hide\n\nEvent fired when the px-popover is hidden.\n`event.detail.target` contains a reference to the px-popover element.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "px-popover-show",
          "description": "px-popover-show\n\nEvent fired when the px-popover is shown.\n`event.detail.target` contains a reference to the px-popover element.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-popover"
    }
  ]
}
