{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "### Usage\n\n    <px-validator validation-method=\"isNumber\" import=\"px-example-validator.html\"></px-validator>",
      "summary": "",
      "path": "px-validator.html",
      "properties": [
        {
          "name": "import",
          "type": "string",
          "description": "The URL pointing to the validation function(s) to be imported for this validator.\nSee px-example-validator.html for an example of this.\n\n    <px-validator import=\"px-example-validator.html\"></px-validator>",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "validators",
          "type": "Array",
          "description": "Array container that stores the validation function(s) imported from the html import (specified in the `import` property).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "multiStepValidation",
          "type": "Array",
          "description": "Array containing the validation function names the developer wants to run against the value they wish to validate.\nShould EITHER specify validation-method (for single) or multi-step-validation (for multiple).\n\n    <px-validator multi-step-validation='[\"isNumber\", \"isRed\", \"isBlue\"]' import=\"px-example-validator.html\"></px-validator>",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "validationMethod",
          "type": "string",
          "description": "String containing the single validation function name the developer wants to run to validate the supplied test value.\nShould EITHER specify validation-method (for single) or multi-step-validation (for multiple).\n\n    <px-validator validation-method='isNumber' import=\"px-example-validator.html\"></px-validator>",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "arguments",
          "type": "Array",
          "description": "Additional arguments to pass in to the validation method. For cases like px-data-table where the `validate` method\nis fired automatically instead of programmatically by the developer.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "_validationMethodChanged",
          "description": "Observer to update the validation method.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 5
            },
            "end": {
              "line": 86,
              "column": 6
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_importHref",
          "description": "Imports the Href with the validation methods.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 10
        },
        "end": {
          "line": 108,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "import",
          "description": "The URL pointing to the validation function(s) to be imported for this validator.\nSee px-example-validator.html for an example of this.\n\n    <px-validator import=\"px-example-validator.html\"></px-validator>",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "validators",
          "description": "Array container that stores the validation function(s) imported from the html import (specified in the `import` property).",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "multi-step-validation",
          "description": "Array containing the validation function names the developer wants to run against the value they wish to validate.\nShould EITHER specify validation-method (for single) or multi-step-validation (for multiple).\n\n    <px-validator multi-step-validation='[\"isNumber\", \"isRed\", \"isBlue\"]' import=\"px-example-validator.html\"></px-validator>",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "validation-method",
          "description": "String containing the single validation function name the developer wants to run to validate the supplied test value.\nShould EITHER specify validation-method (for single) or multi-step-validation (for multiple).\n\n    <px-validator validation-method='isNumber' import=\"px-example-validator.html\"></px-validator>",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "arguments",
          "description": "Additional arguments to pass in to the validation method. For cases like px-data-table where the `validate` method\nis fired automatically instead of programmatically by the developer.",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "px-validator.html",
            "start": {
              "line": 14,
              "column": 4
            },
            "end": {
              "line": 14,
              "column": 17
            }
          }
        }
      ],
      "tagname": "px-validator"
    },
    {
      "description": "Element providing built-in as well as developer supplied validation solutions.\nShould be used in combination with [px-forms-design](https://www.predix-ui.com/#/css/px-forms-design/)\nto style inputs and display appropriate error messages in proximity to the input.\n\n### Usage\nBasic:\n\n    <px-validation>\n      <px-validator\n        validation-method=\"isNumber\"\n        import=\"px-example-validator.html\">\n      </px-validator>\n    </px-validation>\n\nIn multi-step validation, the specified methods are tested in order. The first to fail will return an error. Example:\n\n    <px-validation>\n      <px-validator\n        multi-step-validation='[\"isNumber\", \"isBetween\"]'\n        import=\"px-example-validator.html\">\n      </px-validator>\n    </px-validation>\n\nThe `import` property should specify the path of a file containing your validation methods.\nSee [px-example-validator.html](https://github.com/PredixDev/px-validation/blob/master/px-example-validator.html)\nfor an example structure for this file and its methods.\n\n### Usage with px-forms-design\nHTML:\n\n    <px-validation id=\"myValidator\">\n      <px-validator multi-step-validation='[\"isNumber\", \"isBetween\"]' import=\"px-example-validator.html\"></px-validator>\n    </px-validation>\n    <input id=\"myInput\" class=\"text-input input--regular\" type=\"text\" on-keyup=\"isValid\"/><br/>\n    <small id=\"myError\" class=\"caps form-field__help validation-error hidden\">Enter a number between 1 and 5</small>\n\nJavaScript:\n\n    isValid: function() {\n      var result = myValidator.validate(myInput.value, 1, 5);\n      if(result.passedValidation) {\n        myErrorMessage.classList.add('hidden');\n        myInput.classList.remove('validation-error');\n      }\n      else {\n        myErrorMessage.classList.remove('hidden');\n        myInput.classList.add('validation-error');\n      }\n    }\n\n### Additional arguments\nThere are two ways to specify additional arguments to be used in your validation methods:\n\nJavaScript:\n\n    myValidator.validate(value, 1, 5);\n\nHTML:\n\n    <px-validation>\n      <px-validator validation-method=\"isBetween\" arguments=\"[1,5]\">\n      </px-validator>\n    </px-validation>\n\nArguments passed in the `arguments` property will be included *after* the ones passed in the JavaScript method call.",
      "summary": "",
      "path": "px-validation.html",
      "properties": [],
      "methods": [
        {
          "name": "validate",
          "description": "This method loops through each validator and validates the content.\nAll parameters passed to this method are in turn passed\non to the function specified in `validation-method` or `multi-step-validation`\nof px-validator.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 84,
          "column": 10
        },
        "end": {
          "line": 110,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "px-validation.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 17
            }
          }
        }
      ],
      "tagname": "px-validation"
    }
  ]
}
